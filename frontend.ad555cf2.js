function e(){let e=(()=>{let e=document.getElementsByTagName("main");if(e.length>1)throw Error("Expected one <main> tag only");if(0===e.length)throw Error("Expected there to be a <main> tag");return e[0]})(),t=(()=>{let e=document.getElementsByTagName("nav");if(e.length>1)throw Error("Expected one <nav> tag only");if(0===e.length)throw Error("Expected there to be a <nav> tag");return e[0]})(),r=(()=>{let e=document.getElementById("section-1");if(e instanceof HTMLElement)return e;throw Error("Expected there to be a #section-1 tag")})(),n=(()=>{let e=document.getElementById("section-2");if(e instanceof HTMLElement)return e;throw Error("Expected there to be a #section-2 tag")})(),o=(()=>{let e=document.getElementById("section-3");if(e instanceof HTMLElement)return e;throw Error("Expected there to be a #section-3 tag")})(),i=(()=>{let e=document.getElementById("section-4");if(e instanceof HTMLElement)return e;throw Error("Expected there to be a #section-4 tag")})(),c={"section-1":!0,"section-2":!1,"section-3":!1,"section-4":!1},a=new IntersectionObserver(e=>{for(let t of e){if(!["section-1","section-2","section-3","section-4"].includes(t.target.id))throw Error(`Unexpected id in intersection observer callback: "${t.target.id}"`);c[t.target.id]=t.isIntersecting}!function(){if(!0===c["section-1"]){t.style.backgroundColor="var(--green)";return}if(!0===c["section-2"]){t.style.backgroundColor="var(--blue)";return}if(!0===c["section-3"]){t.style.backgroundColor="var(--red)";return}if(!0===c["section-4"]){t.style.backgroundColor="var(--green)";return}throw Error("Expected at least on section to be visible")}()},{root:e,rootMargin:"-1px"});a.observe(r),a.observe(n),a.observe(o),a.observe(i),setTimeout(()=>{t.style.transition="background-color 0.3s"},1e3)}"complete"===document.readyState?e():document.addEventListener("DOMContentLoaded",e);
//# sourceMappingURL=frontend.ad555cf2.js.map
